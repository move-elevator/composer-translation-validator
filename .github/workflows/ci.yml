name: CI

on:
  push:
  pull_request:

jobs:
  run_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Lowest PHP, Lowest Compatible Symfony, Lowest Composer
          - php: '8.1'
            symfony_constraint: '^6.0' # Symfony 5.x is not compatible with PHP 8.1+
            composer_version: '2.2'
            name_suffix: ' (PHP 8.1, Symfony 6.x, Composer 2.2)'

          # Lowest PHP, Lowest Compatible Symfony, Highest Composer
          - php: '8.1'
            symfony_constraint: '^6.0'
            composer_version: '2.8'
            name_suffix: ' (PHP 8.1, Symfony 6.x, Composer 2.8)'

          # PHP 8.2, Lowest Compatible Symfony, Lowest Composer
          - php: '8.2'
            symfony_constraint: '^6.0'
            composer_version: '2.2'
            name_suffix: ' (PHP 8.2, Symfony 6.x, Composer 2.2)'

          # PHP 8.2, Lowest Compatible Symfony, Highest Composer
          - php: '8.2'
            symfony_constraint: '^6.0'
            composer_version: '2.8'
            name_suffix: ' (PHP 8.2, Symfony 6.x, Composer 2.8)'

          # PHP 8.3, Lowest Compatible Symfony, Lowest Composer
          - php: '8.3'
            symfony_constraint: '^6.0'
            composer_version: '2.2'
            name_suffix: ' (PHP 8.3, Symfony 6.x, Composer 2.2)'

          # PHP 8.3, Highest Symfony, Highest Composer
          - php: '8.3'
            symfony_constraint: '^7.0'
            composer_version: '2.8'
            name_suffix: ' (PHP 8.3, Symfony 7.x, Composer 2.8)'

          # Highest PHP, Highest Symfony, Lowest Compatible Composer (2.4, since 2.2/2.3 are excluded for PHP 8.4)
          - php: '8.4'
            symfony_constraint: '^7.0'
            composer_version: '2.4'
            name_suffix: ' (PHP 8.4, Symfony 7.x, Composer 2.4)'

          # Highest PHP, Highest Symfony, Highest Composer
          - php: '8.4'
            symfony_constraint: '^7.0'
            composer_version: '2.8'
            name_suffix: ' (PHP 8.4, Symfony 7.x, Composer 2.8)'

    name: Test ${{ matrix.name_suffix }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: libxml, simplexml # Required by composer.json
          tools: composer:${{ matrix.composer_version }} # Specify Composer version

      - name: Install Composer dependencies
        run: composer update --no-interaction --no-progress --no-suggest
        env:
          # This is how we tell Composer to resolve Symfony dependencies to a specific major version
          # Composer will try to satisfy this constraint along with the existing ones in composer.json
          SYMFONY_REQUIRE: ${{ matrix.symfony_constraint }}

      - name: Run PHPUnit tests
        run: composer test

  run_coverage_tests:
    runs-on: ubuntu-latest
    name: Code Coverage Report
    needs: run_tests # Ensure tests pass before running coverage

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4' # Fixed to a recent PHP version
          extensions: libxml, simplexml, xdebug # xdebug is needed for coverage
          tools: composer:'2.8' # Fixed to a recent Composer version

      - name: Install Composer dependencies
        run: composer update --no-interaction --no-progress --no-suggest
        env:
          SYMFONY_REQUIRE: '^7.0' # Fixed to a recent Symfony version

      - name: Run PHPUnit tests with coverage
        run: composer test:coverage # This script is configured to generate clover.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: .build/coverage/clover.xml
          retention-days: 5